package org.holtz.eve.jpa.entity;
// Generated Aug 4, 2017 9:16:24 AM by Hibernate Tools 4.0.1.Final

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * TDnDenomination generated by hbm2java
 */
@Entity
@Table(name = "T_DnDenomination", uniqueConstraints = @UniqueConstraint(columnNames = "DnDescriptionTx"))
public class TDnDenomination implements java.io.Serializable {

	private int dnDenominationId;
	private double dnValueMn;
	private String dnDescriptionTx;
	private boolean dnUnavailableBl;
	private Date dnCreationDate;
	private Date dnLastUpdatedDate;
	private int dnSortOrderIn;
	private boolean dnRequiredBl;
	private Set<TSoStore> TSoStores = new HashSet<TSoStore>(0);
	private Set<TPbPccash> TPbPccashes = new HashSet<TPbPccash>(0);

	public TDnDenomination() {
	}

	public TDnDenomination(int dnDenominationId, double dnValueMn, String dnDescriptionTx,
			boolean dnUnavailableBl, Date dnCreationDate, Date dnLastUpdatedDate, int dnSortOrderIn,
			boolean dnRequiredBl) {
		this.dnDenominationId = dnDenominationId;
		this.dnValueMn = dnValueMn;
		this.dnDescriptionTx = dnDescriptionTx;
		this.dnUnavailableBl = dnUnavailableBl;
		this.dnCreationDate = dnCreationDate;
		this.dnLastUpdatedDate = dnLastUpdatedDate;
		this.dnSortOrderIn = dnSortOrderIn;
		this.dnRequiredBl = dnRequiredBl;
	}

	public TDnDenomination(int dnDenominationId, double dnValueMn, String dnDescriptionTx,
			boolean dnUnavailableBl, Date dnCreationDate, Date dnLastUpdatedDate, int dnSortOrderIn,
			boolean dnRequiredBl, Set<TSoStore> TSoStores, Set<TPbPccash> TPbPccashes) {
		this.dnDenominationId = dnDenominationId;
		this.dnValueMn = dnValueMn;
		this.dnDescriptionTx = dnDescriptionTx;
		this.dnUnavailableBl = dnUnavailableBl;
		this.dnCreationDate = dnCreationDate;
		this.dnLastUpdatedDate = dnLastUpdatedDate;
		this.dnSortOrderIn = dnSortOrderIn;
		this.dnRequiredBl = dnRequiredBl;
		this.TSoStores = TSoStores;
		this.TPbPccashes = TPbPccashes;
	}

	@Id

	@Column(name = "DnDenominationID", unique = true, nullable = false)
	public int getDnDenominationId() {
		return this.dnDenominationId;
	}

	public void setDnDenominationId(int dnDenominationId) {
		this.dnDenominationId = dnDenominationId;
	}

	@Column(name = "DnValueMn", nullable = false, precision = 53, scale = 0)
	public double getDnValueMn() {
		return this.dnValueMn;
	}

	public void setDnValueMn(double dnValueMn) {
		this.dnValueMn = dnValueMn;
	}

	@Column(name = "DnDescriptionTx", unique = true, nullable = false)
	public String getDnDescriptionTx() {
		return this.dnDescriptionTx;
	}

	public void setDnDescriptionTx(String dnDescriptionTx) {
		this.dnDescriptionTx = dnDescriptionTx;
	}

	@Column(name = "DnUnavailableBl", nullable = false)
	public boolean isDnUnavailableBl() {
		return this.dnUnavailableBl;
	}

	public void setDnUnavailableBl(boolean dnUnavailableBl) {
		this.dnUnavailableBl = dnUnavailableBl;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DnCreationDate", nullable = false, length = 23)
	public Date getDnCreationDate() {
		return this.dnCreationDate;
	}

	public void setDnCreationDate(Date dnCreationDate) {
		this.dnCreationDate = dnCreationDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DnLastUpdatedDate", nullable = false, length = 23)
	public Date getDnLastUpdatedDate() {
		return this.dnLastUpdatedDate;
	}

	public void setDnLastUpdatedDate(Date dnLastUpdatedDate) {
		this.dnLastUpdatedDate = dnLastUpdatedDate;
	}

	@Column(name = "DnSortOrderIn", nullable = false)
	public int getDnSortOrderIn() {
		return this.dnSortOrderIn;
	}

	public void setDnSortOrderIn(int dnSortOrderIn) {
		this.dnSortOrderIn = dnSortOrderIn;
	}

	@Column(name = "DnRequiredBl", nullable = false)
	public boolean isDnRequiredBl() {
		return this.dnRequiredBl;
	}

	public void setDnRequiredBl(boolean dnRequiredBl) {
		this.dnRequiredBl = dnRequiredBl;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "T_Z8StoreDenomination", joinColumns = {
			@JoinColumn(name = "Z8DenominationID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Z8StoreID", nullable = false, updatable = false) })
	public Set<TSoStore> getTSoStores() {
		return this.TSoStores;
	}

	public void setTSoStores(Set<TSoStore> TSoStores) {
		this.TSoStores = TSoStores;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TDnDenomination")
	public Set<TPbPccash> getTPbPccashes() {
		return this.TPbPccashes;
	}

	public void setTPbPccashes(Set<TPbPccash> TPbPccashes) {
		this.TPbPccashes = TPbPccashes;
	}

}
