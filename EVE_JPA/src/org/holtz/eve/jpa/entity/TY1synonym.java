package org.holtz.eve.jpa.entity;
// Generated Aug 4, 2017 9:16:24 AM by Hibernate Tools 4.0.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * TY1synonym generated by hbm2java
 */
@Entity
@Table(name = "T_Y1Synonym")
public class TY1synonym implements java.io.Serializable {

	private int y1synonymId;
	private String y1synonymTx;
	private Set<TY1synonym> TY1synonymsForY2childId = new HashSet<TY1synonym>(0);
	private Set<TY1synonym> TY1synonymsForY2parentId = new HashSet<TY1synonym>(0);

	public TY1synonym() {
	}

	public TY1synonym(int y1synonymId, String y1synonymTx) {
		this.y1synonymId = y1synonymId;
		this.y1synonymTx = y1synonymTx;
	}

	public TY1synonym(int y1synonymId, String y1synonymTx, Set<TY1synonym> TY1synonymsForY2childId,
			Set<TY1synonym> TY1synonymsForY2parentId) {
		this.y1synonymId = y1synonymId;
		this.y1synonymTx = y1synonymTx;
		this.TY1synonymsForY2childId = TY1synonymsForY2childId;
		this.TY1synonymsForY2parentId = TY1synonymsForY2parentId;
	}

	@Id

	@Column(name = "Y1SynonymID", unique = true, nullable = false)
	public int getY1synonymId() {
		return this.y1synonymId;
	}

	public void setY1synonymId(int y1synonymId) {
		this.y1synonymId = y1synonymId;
	}

	@Column(name = "Y1SynonymTx", nullable = false)
	public String getY1synonymTx() {
		return this.y1synonymTx;
	}

	public void setY1synonymTx(String y1synonymTx) {
		this.y1synonymTx = y1synonymTx;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "T_Y2SynonymRelation", joinColumns = {
			@JoinColumn(name = "Y2ParentID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Y2ChildID", nullable = false, updatable = false) })
	public Set<TY1synonym> getTY1synonymsForY2childId() {
		return this.TY1synonymsForY2childId;
	}

	public void setTY1synonymsForY2childId(Set<TY1synonym> TY1synonymsForY2childId) {
		this.TY1synonymsForY2childId = TY1synonymsForY2childId;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "T_Y2SynonymRelation", joinColumns = {
			@JoinColumn(name = "Y2ChildID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Y2ParentID", nullable = false, updatable = false) })
	public Set<TY1synonym> getTY1synonymsForY2parentId() {
		return this.TY1synonymsForY2parentId;
	}

	public void setTY1synonymsForY2parentId(Set<TY1synonym> TY1synonymsForY2parentId) {
		this.TY1synonymsForY2parentId = TY1synonymsForY2parentId;
	}

}
