package org.holtz.eve.jpa.entity;
// Generated Aug 4, 2017 9:16:24 AM by Hibernate Tools 4.0.1.Final

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * TPfProfitCenter generated by hbm2java
 */
@Entity
@Table(name = "T_PfProfitCenter", uniqueConstraints = @UniqueConstraint(columnNames = "PfProfitCenterTx"))
public class TPfProfitCenter implements java.io.Serializable {

	private int pfProfitCenterId;
	private TGlaccount TGlaccountByPfGlaccountIdN;
	private TGlaccount TGlaccountByPfCogsaccountIdN;
	private TGlaccount TGlaccountByPfInventoryAccountIdN;
	private String pfProfitCenterTx;
	private boolean pfUnavailableBl;
	private Date pfLastUpdatedDate;
	private boolean pfRequiredBl;
	private String pfGlcodeTxN;
	private Date pfCreationDate;
	private boolean pfReportMemoBl;
	private Integer pfNonSalesAccountIdN;
	private Set<TIiinvoiceItem> TIiinvoiceItems = new HashSet<TIiinvoiceItem>(0);
	private Set<TQiquoteItem> TQiquoteItems = new HashSet<TQiquoteItem>(0);
	private Set<TStstockType> TStstockTypes = new HashSet<TStstockType>(0);
	private Set<TSoStore> TSoStores = new HashSet<TSoStore>(0);
	private Set<TVivoucherItem> TVivoucherItems = new HashSet<TVivoucherItem>(0);

	public TPfProfitCenter() {
	}

	public TPfProfitCenter(int pfProfitCenterId, String pfProfitCenterTx, boolean pfUnavailableBl,
			Date pfLastUpdatedDate, boolean pfRequiredBl, Date pfCreationDate, boolean pfReportMemoBl) {
		this.pfProfitCenterId = pfProfitCenterId;
		this.pfProfitCenterTx = pfProfitCenterTx;
		this.pfUnavailableBl = pfUnavailableBl;
		this.pfLastUpdatedDate = pfLastUpdatedDate;
		this.pfRequiredBl = pfRequiredBl;
		this.pfCreationDate = pfCreationDate;
		this.pfReportMemoBl = pfReportMemoBl;
	}

	public TPfProfitCenter(int pfProfitCenterId, TGlaccount TGlaccountByPfGlaccountIdN,
			TGlaccount TGlaccountByPfCogsaccountIdN, TGlaccount TGlaccountByPfInventoryAccountIdN,
			String pfProfitCenterTx, boolean pfUnavailableBl, Date pfLastUpdatedDate, boolean pfRequiredBl,
			String pfGlcodeTxN, Date pfCreationDate, boolean pfReportMemoBl, Integer pfNonSalesAccountIdN,
			Set<TIiinvoiceItem> TIiinvoiceItems, Set<TQiquoteItem> TQiquoteItems, Set<TStstockType> TStstockTypes,
			Set<TSoStore> TSoStores, Set<TVivoucherItem> TVivoucherItems) {
		this.pfProfitCenterId = pfProfitCenterId;
		this.TGlaccountByPfGlaccountIdN = TGlaccountByPfGlaccountIdN;
		this.TGlaccountByPfCogsaccountIdN = TGlaccountByPfCogsaccountIdN;
		this.TGlaccountByPfInventoryAccountIdN = TGlaccountByPfInventoryAccountIdN;
		this.pfProfitCenterTx = pfProfitCenterTx;
		this.pfUnavailableBl = pfUnavailableBl;
		this.pfLastUpdatedDate = pfLastUpdatedDate;
		this.pfRequiredBl = pfRequiredBl;
		this.pfGlcodeTxN = pfGlcodeTxN;
		this.pfCreationDate = pfCreationDate;
		this.pfReportMemoBl = pfReportMemoBl;
		this.pfNonSalesAccountIdN = pfNonSalesAccountIdN;
		this.TIiinvoiceItems = TIiinvoiceItems;
		this.TQiquoteItems = TQiquoteItems;
		this.TStstockTypes = TStstockTypes;
		this.TSoStores = TSoStores;
		this.TVivoucherItems = TVivoucherItems;
	}

	@Id

	@Column(name = "PfProfitCenterID", unique = true, nullable = false)
	public int getPfProfitCenterId() {
		return this.pfProfitCenterId;
	}

	public void setPfProfitCenterId(int pfProfitCenterId) {
		this.pfProfitCenterId = pfProfitCenterId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PfGLAccountID_N")
	public TGlaccount getTGlaccountByPfGlaccountIdN() {
		return this.TGlaccountByPfGlaccountIdN;
	}

	public void setTGlaccountByPfGlaccountIdN(TGlaccount TGlaccountByPfGlaccountIdN) {
		this.TGlaccountByPfGlaccountIdN = TGlaccountByPfGlaccountIdN;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PfCOGSAccountID_N")
	public TGlaccount getTGlaccountByPfCogsaccountIdN() {
		return this.TGlaccountByPfCogsaccountIdN;
	}

	public void setTGlaccountByPfCogsaccountIdN(TGlaccount TGlaccountByPfCogsaccountIdN) {
		this.TGlaccountByPfCogsaccountIdN = TGlaccountByPfCogsaccountIdN;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PfInventoryAccountID_N")
	public TGlaccount getTGlaccountByPfInventoryAccountIdN() {
		return this.TGlaccountByPfInventoryAccountIdN;
	}

	public void setTGlaccountByPfInventoryAccountIdN(TGlaccount TGlaccountByPfInventoryAccountIdN) {
		this.TGlaccountByPfInventoryAccountIdN = TGlaccountByPfInventoryAccountIdN;
	}

	@Column(name = "PfProfitCenterTx", unique = true, nullable = false)
	public String getPfProfitCenterTx() {
		return this.pfProfitCenterTx;
	}

	public void setPfProfitCenterTx(String pfProfitCenterTx) {
		this.pfProfitCenterTx = pfProfitCenterTx;
	}

	@Column(name = "PfUnavailableBl", nullable = false)
	public boolean isPfUnavailableBl() {
		return this.pfUnavailableBl;
	}

	public void setPfUnavailableBl(boolean pfUnavailableBl) {
		this.pfUnavailableBl = pfUnavailableBl;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PfLastUpdatedDate", nullable = false, length = 23)
	public Date getPfLastUpdatedDate() {
		return this.pfLastUpdatedDate;
	}

	public void setPfLastUpdatedDate(Date pfLastUpdatedDate) {
		this.pfLastUpdatedDate = pfLastUpdatedDate;
	}

	@Column(name = "PfRequiredBl", nullable = false)
	public boolean isPfRequiredBl() {
		return this.pfRequiredBl;
	}

	public void setPfRequiredBl(boolean pfRequiredBl) {
		this.pfRequiredBl = pfRequiredBl;
	}

	@Column(name = "PfGLCodeTx_N")
	public String getPfGlcodeTxN() {
		return this.pfGlcodeTxN;
	}

	public void setPfGlcodeTxN(String pfGlcodeTxN) {
		this.pfGlcodeTxN = pfGlcodeTxN;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "PfCreationDate", nullable = false, length = 23)
	public Date getPfCreationDate() {
		return this.pfCreationDate;
	}

	public void setPfCreationDate(Date pfCreationDate) {
		this.pfCreationDate = pfCreationDate;
	}

	@Column(name = "PfReportMemoBl", nullable = false)
	public boolean isPfReportMemoBl() {
		return this.pfReportMemoBl;
	}

	public void setPfReportMemoBl(boolean pfReportMemoBl) {
		this.pfReportMemoBl = pfReportMemoBl;
	}

	@Column(name = "PfNonSalesAccountID_N")
	public Integer getPfNonSalesAccountIdN() {
		return this.pfNonSalesAccountIdN;
	}

	public void setPfNonSalesAccountIdN(Integer pfNonSalesAccountIdN) {
		this.pfNonSalesAccountIdN = pfNonSalesAccountIdN;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TPfProfitCenter")
	public Set<TIiinvoiceItem> getTIiinvoiceItems() {
		return this.TIiinvoiceItems;
	}

	public void setTIiinvoiceItems(Set<TIiinvoiceItem> TIiinvoiceItems) {
		this.TIiinvoiceItems = TIiinvoiceItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TPfProfitCenter")
	public Set<TQiquoteItem> getTQiquoteItems() {
		return this.TQiquoteItems;
	}

	public void setTQiquoteItems(Set<TQiquoteItem> TQiquoteItems) {
		this.TQiquoteItems = TQiquoteItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TPfProfitCenter")
	public Set<TStstockType> getTStstockTypes() {
		return this.TStstockTypes;
	}

	public void setTStstockTypes(Set<TStstockType> TStstockTypes) {
		this.TStstockTypes = TStstockTypes;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "T_ZiStoreProfitCenter", joinColumns = {
			@JoinColumn(name = "ZiProfitCenterID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "ZiStoreID", nullable = false, updatable = false) })
	public Set<TSoStore> getTSoStores() {
		return this.TSoStores;
	}

	public void setTSoStores(Set<TSoStore> TSoStores) {
		this.TSoStores = TSoStores;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TPfProfitCenter")
	public Set<TVivoucherItem> getTVivoucherItems() {
		return this.TVivoucherItems;
	}

	public void setTVivoucherItems(Set<TVivoucherItem> TVivoucherItems) {
		this.TVivoucherItems = TVivoucherItems;
	}

}
