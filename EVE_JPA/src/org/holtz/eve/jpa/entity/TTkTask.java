package org.holtz.eve.jpa.entity;
// Generated Aug 4, 2017 9:16:24 AM by Hibernate Tools 4.0.1.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TTkTask generated by hbm2java
 */
@Entity
@Table(name = "T_TkTask")
public class TTkTask implements java.io.Serializable {

	private int tkTaskId;
	private TEmEmp TEmEmpByTkFromEmpIdN;
	private TSoStore TSoStore;
	private TTttaskType TTttaskType;
	private TEmEmp TEmEmpByTkEmpIdN;
	private TTmTaskStatus TTmTaskStatus;
	private Date tkDueStartDate;
	private Date tkDueEndDate;
	private Date tkReminderDate;
	private String tkNotesTxN;
	private Date tkCreationDate;
	private Date tkLastUpdatedDate;
	private Date tkActualStartDateN;
	private Date tkActualEndDateN;
	private boolean tkSmsreminderBl;
	private Date tkSmssentDate;
	private Integer tkCommissionClosingIdN;
	private int tkAssignedByEmpId;

	public TTkTask() {
	}

	public TTkTask(int tkTaskId, TSoStore TSoStore, TTttaskType TTttaskType, TTmTaskStatus TTmTaskStatus,
			Date tkDueStartDate, Date tkDueEndDate, Date tkReminderDate, Date tkCreationDate, Date tkLastUpdatedDate,
			boolean tkSmsreminderBl, int tkAssignedByEmpId) {
		this.tkTaskId = tkTaskId;
		this.TSoStore = TSoStore;
		this.TTttaskType = TTttaskType;
		this.TTmTaskStatus = TTmTaskStatus;
		this.tkDueStartDate = tkDueStartDate;
		this.tkDueEndDate = tkDueEndDate;
		this.tkReminderDate = tkReminderDate;
		this.tkCreationDate = tkCreationDate;
		this.tkLastUpdatedDate = tkLastUpdatedDate;
		this.tkSmsreminderBl = tkSmsreminderBl;
		this.tkAssignedByEmpId = tkAssignedByEmpId;
	}

	public TTkTask(int tkTaskId, TEmEmp TEmEmpByTkFromEmpIdN, TSoStore TSoStore, TTttaskType TTttaskType,
			TEmEmp TEmEmpByTkEmpIdN, TTmTaskStatus TTmTaskStatus, Date tkDueStartDate, Date tkDueEndDate,
			Date tkReminderDate, String tkNotesTxN, Date tkCreationDate, Date tkLastUpdatedDate,
			Date tkActualStartDateN, Date tkActualEndDateN, boolean tkSmsreminderBl, Date tkSmssentDate,
			Integer tkCommissionClosingIdN, int tkAssignedByEmpId) {
		this.tkTaskId = tkTaskId;
		this.TEmEmpByTkFromEmpIdN = TEmEmpByTkFromEmpIdN;
		this.TSoStore = TSoStore;
		this.TTttaskType = TTttaskType;
		this.TEmEmpByTkEmpIdN = TEmEmpByTkEmpIdN;
		this.TTmTaskStatus = TTmTaskStatus;
		this.tkDueStartDate = tkDueStartDate;
		this.tkDueEndDate = tkDueEndDate;
		this.tkReminderDate = tkReminderDate;
		this.tkNotesTxN = tkNotesTxN;
		this.tkCreationDate = tkCreationDate;
		this.tkLastUpdatedDate = tkLastUpdatedDate;
		this.tkActualStartDateN = tkActualStartDateN;
		this.tkActualEndDateN = tkActualEndDateN;
		this.tkSmsreminderBl = tkSmsreminderBl;
		this.tkSmssentDate = tkSmssentDate;
		this.tkCommissionClosingIdN = tkCommissionClosingIdN;
		this.tkAssignedByEmpId = tkAssignedByEmpId;
	}

	@Id

	@Column(name = "TkTaskID", unique = true, nullable = false)
	public int getTkTaskId() {
		return this.tkTaskId;
	}

	public void setTkTaskId(int tkTaskId) {
		this.tkTaskId = tkTaskId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TkFromEmpId_N")
	public TEmEmp getTEmEmpByTkFromEmpIdN() {
		return this.TEmEmpByTkFromEmpIdN;
	}

	public void setTEmEmpByTkFromEmpIdN(TEmEmp TEmEmpByTkFromEmpIdN) {
		this.TEmEmpByTkFromEmpIdN = TEmEmpByTkFromEmpIdN;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TkStoreID", nullable = false)
	public TSoStore getTSoStore() {
		return this.TSoStore;
	}

	public void setTSoStore(TSoStore TSoStore) {
		this.TSoStore = TSoStore;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TkTaskTypeID", nullable = false)
	public TTttaskType getTTttaskType() {
		return this.TTttaskType;
	}

	public void setTTttaskType(TTttaskType TTttaskType) {
		this.TTttaskType = TTttaskType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TkEmpID_N")
	public TEmEmp getTEmEmpByTkEmpIdN() {
		return this.TEmEmpByTkEmpIdN;
	}

	public void setTEmEmpByTkEmpIdN(TEmEmp TEmEmpByTkEmpIdN) {
		this.TEmEmpByTkEmpIdN = TEmEmpByTkEmpIdN;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TkTaskStatusID", nullable = false)
	public TTmTaskStatus getTTmTaskStatus() {
		return this.TTmTaskStatus;
	}

	public void setTTmTaskStatus(TTmTaskStatus TTmTaskStatus) {
		this.TTmTaskStatus = TTmTaskStatus;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TkDueStartDate", nullable = false, length = 23)
	public Date getTkDueStartDate() {
		return this.tkDueStartDate;
	}

	public void setTkDueStartDate(Date tkDueStartDate) {
		this.tkDueStartDate = tkDueStartDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TkDueEndDate", nullable = false, length = 23)
	public Date getTkDueEndDate() {
		return this.tkDueEndDate;
	}

	public void setTkDueEndDate(Date tkDueEndDate) {
		this.tkDueEndDate = tkDueEndDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TkReminderDate", nullable = false, length = 23)
	public Date getTkReminderDate() {
		return this.tkReminderDate;
	}

	public void setTkReminderDate(Date tkReminderDate) {
		this.tkReminderDate = tkReminderDate;
	}

	@Column(name = "TkNotesTx_N")
	public String getTkNotesTxN() {
		return this.tkNotesTxN;
	}

	public void setTkNotesTxN(String tkNotesTxN) {
		this.tkNotesTxN = tkNotesTxN;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TkCreationDate", nullable = false, length = 23)
	public Date getTkCreationDate() {
		return this.tkCreationDate;
	}

	public void setTkCreationDate(Date tkCreationDate) {
		this.tkCreationDate = tkCreationDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TkLastUpdatedDate", nullable = false, length = 23)
	public Date getTkLastUpdatedDate() {
		return this.tkLastUpdatedDate;
	}

	public void setTkLastUpdatedDate(Date tkLastUpdatedDate) {
		this.tkLastUpdatedDate = tkLastUpdatedDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TkActualStartDate_N", length = 23)
	public Date getTkActualStartDateN() {
		return this.tkActualStartDateN;
	}

	public void setTkActualStartDateN(Date tkActualStartDateN) {
		this.tkActualStartDateN = tkActualStartDateN;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TkActualEndDate_N", length = 23)
	public Date getTkActualEndDateN() {
		return this.tkActualEndDateN;
	}

	public void setTkActualEndDateN(Date tkActualEndDateN) {
		this.tkActualEndDateN = tkActualEndDateN;
	}

	@Column(name = "TkSMSReminderBl", nullable = false)
	public boolean isTkSmsreminderBl() {
		return this.tkSmsreminderBl;
	}

	public void setTkSmsreminderBl(boolean tkSmsreminderBl) {
		this.tkSmsreminderBl = tkSmsreminderBl;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TkSMSSentDate", length = 23)
	public Date getTkSmssentDate() {
		return this.tkSmssentDate;
	}

	public void setTkSmssentDate(Date tkSmssentDate) {
		this.tkSmssentDate = tkSmssentDate;
	}

	@Column(name = "TkCommissionClosingID_N")
	public Integer getTkCommissionClosingIdN() {
		return this.tkCommissionClosingIdN;
	}

	public void setTkCommissionClosingIdN(Integer tkCommissionClosingIdN) {
		this.tkCommissionClosingIdN = tkCommissionClosingIdN;
	}

	@Column(name = "TkAssignedByEmpID", nullable = false)
	public int getTkAssignedByEmpId() {
		return this.tkAssignedByEmpId;
	}

	public void setTkAssignedByEmpId(int tkAssignedByEmpId) {
		this.tkAssignedByEmpId = tkAssignedByEmpId;
	}

}
