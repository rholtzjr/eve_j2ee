package org.holtz.eve.jpa.entity;
// Generated Aug 4, 2017 9:16:24 AM by Hibernate Tools 4.0.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * TMmMembershipType generated by hbm2java
 */
@Entity
@Table(name = "T_MmMembershipType", uniqueConstraints = @UniqueConstraint(columnNames = "MmMembershipTypeTx"))
public class TMmMembershipType implements java.io.Serializable {

	private int mmMembershipTypeId;
	private String mmMembershipTypeTx;
	private boolean mmUnavailableBl;
	private Date mmLastUpdatedDate;
	private boolean mmRequiredBl;
	private Date mmCreationDate;
	private Set<TCfCustClub> TCfCustClubs = new HashSet<TCfCustClub>(0);
	private Set<TS0stockClub> TS0stockClubs = new HashSet<TS0stockClub>(0);
	private Set<TSoStore> TSoStores = new HashSet<TSoStore>(0);

	public TMmMembershipType() {
	}

	public TMmMembershipType(int mmMembershipTypeId, String mmMembershipTypeTx, boolean mmUnavailableBl,
			Date mmLastUpdatedDate, boolean mmRequiredBl, Date mmCreationDate) {
		this.mmMembershipTypeId = mmMembershipTypeId;
		this.mmMembershipTypeTx = mmMembershipTypeTx;
		this.mmUnavailableBl = mmUnavailableBl;
		this.mmLastUpdatedDate = mmLastUpdatedDate;
		this.mmRequiredBl = mmRequiredBl;
		this.mmCreationDate = mmCreationDate;
	}

	public TMmMembershipType(int mmMembershipTypeId, String mmMembershipTypeTx, boolean mmUnavailableBl,
			Date mmLastUpdatedDate, boolean mmRequiredBl, Date mmCreationDate, Set<TCfCustClub> TCfCustClubs,
			Set<TS0stockClub> TS0stockClubs, Set<TSoStore> TSoStores) {
		this.mmMembershipTypeId = mmMembershipTypeId;
		this.mmMembershipTypeTx = mmMembershipTypeTx;
		this.mmUnavailableBl = mmUnavailableBl;
		this.mmLastUpdatedDate = mmLastUpdatedDate;
		this.mmRequiredBl = mmRequiredBl;
		this.mmCreationDate = mmCreationDate;
		this.TCfCustClubs = TCfCustClubs;
		this.TS0stockClubs = TS0stockClubs;
		this.TSoStores = TSoStores;
	}

	@Id

	@Column(name = "MmMembershipTypeID", unique = true, nullable = false)
	public int getMmMembershipTypeId() {
		return this.mmMembershipTypeId;
	}

	public void setMmMembershipTypeId(int mmMembershipTypeId) {
		this.mmMembershipTypeId = mmMembershipTypeId;
	}

	@Column(name = "MmMembershipTypeTx", unique = true, nullable = false)
	public String getMmMembershipTypeTx() {
		return this.mmMembershipTypeTx;
	}

	public void setMmMembershipTypeTx(String mmMembershipTypeTx) {
		this.mmMembershipTypeTx = mmMembershipTypeTx;
	}

	@Column(name = "MmUnavailableBl", nullable = false)
	public boolean isMmUnavailableBl() {
		return this.mmUnavailableBl;
	}

	public void setMmUnavailableBl(boolean mmUnavailableBl) {
		this.mmUnavailableBl = mmUnavailableBl;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MmLastUpdatedDate", nullable = false, length = 23)
	public Date getMmLastUpdatedDate() {
		return this.mmLastUpdatedDate;
	}

	public void setMmLastUpdatedDate(Date mmLastUpdatedDate) {
		this.mmLastUpdatedDate = mmLastUpdatedDate;
	}

	@Column(name = "MmRequiredBl", nullable = false)
	public boolean isMmRequiredBl() {
		return this.mmRequiredBl;
	}

	public void setMmRequiredBl(boolean mmRequiredBl) {
		this.mmRequiredBl = mmRequiredBl;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MmCreationDate", nullable = false, length = 23)
	public Date getMmCreationDate() {
		return this.mmCreationDate;
	}

	public void setMmCreationDate(Date mmCreationDate) {
		this.mmCreationDate = mmCreationDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TMmMembershipType")
	public Set<TCfCustClub> getTCfCustClubs() {
		return this.TCfCustClubs;
	}

	public void setTCfCustClubs(Set<TCfCustClub> TCfCustClubs) {
		this.TCfCustClubs = TCfCustClubs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TMmMembershipType")
	public Set<TS0stockClub> getTS0stockClubs() {
		return this.TS0stockClubs;
	}

	public void setTS0stockClubs(Set<TS0stockClub> TS0stockClubs) {
		this.TS0stockClubs = TS0stockClubs;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "T_ZgStoreMembershipType", joinColumns = {
			@JoinColumn(name = "ZgMembershipTypeID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "ZgStoreID", nullable = false, updatable = false) })
	public Set<TSoStore> getTSoStores() {
		return this.TSoStores;
	}

	public void setTSoStores(Set<TSoStore> TSoStores) {
		this.TSoStores = TSoStores;
	}

}
