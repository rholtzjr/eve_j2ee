package org.holtz.eve.jpa.entity;
// Generated Aug 4, 2017 9:16:24 AM by Hibernate Tools 4.0.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * TTbtaxBand generated by hbm2java
 */
@Entity
@Table(name = "T_TBTaxBand", uniqueConstraints = @UniqueConstraint(columnNames = "TBTaxBandTx"))
public class TTbtaxBand implements java.io.Serializable {

	private int tbtaxBandId;
	private TGlaccount TGlaccount;
	private TSuSupplier TSuSupplier;
	private String tbtaxBandTx;
	private float tbtaxRateFl;
	private boolean tbunavailableBl;
	private Date tblastUpdatedDate;
	private boolean tbrequiredBl;
	private Date tbcreationDate;
	private boolean tballowExemptionBl;
	private Integer tbnonSalesAccountIdN;
	private Set<TC7costCenterStockType> TC7costCenterStockTypes = new HashSet<TC7costCenterStockType>(0);
	private Set<TZ5storeSupplier> TZ5storeSuppliers = new HashSet<TZ5storeSupplier>(0);
	private Set<TRirentalBookingItem> TRirentalBookingItems = new HashSet<TRirentalBookingItem>(0);
	private Set<TSgServiceBookingItem> TSgServiceBookingItems = new HashSet<TSgServiceBookingItem>(0);
	private Set<TCuCust> TCuCusts = new HashSet<TCuCust>(0);
	private Set<TPipoitem> TPipoitems = new HashSet<TPipoitem>(0);
	private Set<TSpservicePart> TSpserviceParts = new HashSet<TSpservicePart>(0);
	private Set<TSoStore> TSoStores = new HashSet<TSoStore>(0);
	private Set<TTxTax> TTxTaxes = new HashSet<TTxTax>(0);

	public TTbtaxBand() {
	}

	public TTbtaxBand(int tbtaxBandId, String tbtaxBandTx, float tbtaxRateFl, boolean tbunavailableBl,
			Date tblastUpdatedDate, boolean tbrequiredBl, Date tbcreationDate, boolean tballowExemptionBl) {
		this.tbtaxBandId = tbtaxBandId;
		this.tbtaxBandTx = tbtaxBandTx;
		this.tbtaxRateFl = tbtaxRateFl;
		this.tbunavailableBl = tbunavailableBl;
		this.tblastUpdatedDate = tblastUpdatedDate;
		this.tbrequiredBl = tbrequiredBl;
		this.tbcreationDate = tbcreationDate;
		this.tballowExemptionBl = tballowExemptionBl;
	}

	public TTbtaxBand(int tbtaxBandId, TGlaccount TGlaccount, TSuSupplier TSuSupplier, String tbtaxBandTx,
			float tbtaxRateFl, boolean tbunavailableBl, Date tblastUpdatedDate, boolean tbrequiredBl,
			Date tbcreationDate, boolean tballowExemptionBl, Integer tbnonSalesAccountIdN,
			Set<TC7costCenterStockType> TC7costCenterStockTypes, Set<TZ5storeSupplier> TZ5storeSuppliers,
			Set<TRirentalBookingItem> TRirentalBookingItems, Set<TSgServiceBookingItem> TSgServiceBookingItems,
			Set<TCuCust> TCuCusts, Set<TPipoitem> TPipoitems, Set<TSpservicePart> TSpserviceParts,
			Set<TSoStore> TSoStores, Set<TTxTax> TTxTaxes) {
		this.tbtaxBandId = tbtaxBandId;
		this.TGlaccount = TGlaccount;
		this.TSuSupplier = TSuSupplier;
		this.tbtaxBandTx = tbtaxBandTx;
		this.tbtaxRateFl = tbtaxRateFl;
		this.tbunavailableBl = tbunavailableBl;
		this.tblastUpdatedDate = tblastUpdatedDate;
		this.tbrequiredBl = tbrequiredBl;
		this.tbcreationDate = tbcreationDate;
		this.tballowExemptionBl = tballowExemptionBl;
		this.tbnonSalesAccountIdN = tbnonSalesAccountIdN;
		this.TC7costCenterStockTypes = TC7costCenterStockTypes;
		this.TZ5storeSuppliers = TZ5storeSuppliers;
		this.TRirentalBookingItems = TRirentalBookingItems;
		this.TSgServiceBookingItems = TSgServiceBookingItems;
		this.TCuCusts = TCuCusts;
		this.TPipoitems = TPipoitems;
		this.TSpserviceParts = TSpserviceParts;
		this.TSoStores = TSoStores;
		this.TTxTaxes = TTxTaxes;
	}

	@Id

	@Column(name = "TBTaxBandID", unique = true, nullable = false)
	public int getTbtaxBandId() {
		return this.tbtaxBandId;
	}

	public void setTbtaxBandId(int tbtaxBandId) {
		this.tbtaxBandId = tbtaxBandId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TBGLAccountID_N")
	public TGlaccount getTGlaccount() {
		return this.TGlaccount;
	}

	public void setTGlaccount(TGlaccount TGlaccount) {
		this.TGlaccount = TGlaccount;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TBSupplierID_N")
	public TSuSupplier getTSuSupplier() {
		return this.TSuSupplier;
	}

	public void setTSuSupplier(TSuSupplier TSuSupplier) {
		this.TSuSupplier = TSuSupplier;
	}

	@Column(name = "TBTaxBandTx", unique = true, nullable = false)
	public String getTbtaxBandTx() {
		return this.tbtaxBandTx;
	}

	public void setTbtaxBandTx(String tbtaxBandTx) {
		this.tbtaxBandTx = tbtaxBandTx;
	}

	@Column(name = "TBTaxRateFl", nullable = false, precision = 24, scale = 0)
	public float getTbtaxRateFl() {
		return this.tbtaxRateFl;
	}

	public void setTbtaxRateFl(float tbtaxRateFl) {
		this.tbtaxRateFl = tbtaxRateFl;
	}

	@Column(name = "TBUnavailableBl", nullable = false)
	public boolean isTbunavailableBl() {
		return this.tbunavailableBl;
	}

	public void setTbunavailableBl(boolean tbunavailableBl) {
		this.tbunavailableBl = tbunavailableBl;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TBLastUpdatedDate", nullable = false, length = 23)
	public Date getTblastUpdatedDate() {
		return this.tblastUpdatedDate;
	}

	public void setTblastUpdatedDate(Date tblastUpdatedDate) {
		this.tblastUpdatedDate = tblastUpdatedDate;
	}

	@Column(name = "TBRequiredBl", nullable = false)
	public boolean isTbrequiredBl() {
		return this.tbrequiredBl;
	}

	public void setTbrequiredBl(boolean tbrequiredBl) {
		this.tbrequiredBl = tbrequiredBl;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TBCreationDate", nullable = false, length = 23)
	public Date getTbcreationDate() {
		return this.tbcreationDate;
	}

	public void setTbcreationDate(Date tbcreationDate) {
		this.tbcreationDate = tbcreationDate;
	}

	@Column(name = "TBAllowExemptionBl", nullable = false)
	public boolean isTballowExemptionBl() {
		return this.tballowExemptionBl;
	}

	public void setTballowExemptionBl(boolean tballowExemptionBl) {
		this.tballowExemptionBl = tballowExemptionBl;
	}

	@Column(name = "TBNonSalesAccountID_N")
	public Integer getTbnonSalesAccountIdN() {
		return this.tbnonSalesAccountIdN;
	}

	public void setTbnonSalesAccountIdN(Integer tbnonSalesAccountIdN) {
		this.tbnonSalesAccountIdN = tbnonSalesAccountIdN;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TTbtaxBand")
	public Set<TC7costCenterStockType> getTC7costCenterStockTypes() {
		return this.TC7costCenterStockTypes;
	}

	public void setTC7costCenterStockTypes(Set<TC7costCenterStockType> TC7costCenterStockTypes) {
		this.TC7costCenterStockTypes = TC7costCenterStockTypes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TTbtaxBand")
	public Set<TZ5storeSupplier> getTZ5storeSuppliers() {
		return this.TZ5storeSuppliers;
	}

	public void setTZ5storeSuppliers(Set<TZ5storeSupplier> TZ5storeSuppliers) {
		this.TZ5storeSuppliers = TZ5storeSuppliers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TTbtaxBand")
	public Set<TRirentalBookingItem> getTRirentalBookingItems() {
		return this.TRirentalBookingItems;
	}

	public void setTRirentalBookingItems(Set<TRirentalBookingItem> TRirentalBookingItems) {
		this.TRirentalBookingItems = TRirentalBookingItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TTbtaxBand")
	public Set<TSgServiceBookingItem> getTSgServiceBookingItems() {
		return this.TSgServiceBookingItems;
	}

	public void setTSgServiceBookingItems(Set<TSgServiceBookingItem> TSgServiceBookingItems) {
		this.TSgServiceBookingItems = TSgServiceBookingItems;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "T_CwCustTaxExemption", joinColumns = {
			@JoinColumn(name = "CwTaxBandID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "CwCustID", nullable = false, updatable = false) })
	public Set<TCuCust> getTCuCusts() {
		return this.TCuCusts;
	}

	public void setTCuCusts(Set<TCuCust> TCuCusts) {
		this.TCuCusts = TCuCusts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TTbtaxBand")
	public Set<TPipoitem> getTPipoitems() {
		return this.TPipoitems;
	}

	public void setTPipoitems(Set<TPipoitem> TPipoitems) {
		this.TPipoitems = TPipoitems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TTbtaxBand")
	public Set<TSpservicePart> getTSpserviceParts() {
		return this.TSpserviceParts;
	}

	public void setTSpserviceParts(Set<TSpservicePart> TSpserviceParts) {
		this.TSpserviceParts = TSpserviceParts;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "T_ZnStoreTaxBand", joinColumns = {
			@JoinColumn(name = "ZnTaxBandID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "ZnStoreID", nullable = false, updatable = false) })
	public Set<TSoStore> getTSoStores() {
		return this.TSoStores;
	}

	public void setTSoStores(Set<TSoStore> TSoStores) {
		this.TSoStores = TSoStores;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TTbtaxBand")
	public Set<TTxTax> getTTxTaxes() {
		return this.TTxTaxes;
	}

	public void setTTxTaxes(Set<TTxTax> TTxTaxes) {
		this.TTxTaxes = TTxTaxes;
	}

}
