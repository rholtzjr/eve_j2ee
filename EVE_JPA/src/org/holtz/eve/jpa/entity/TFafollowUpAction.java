package org.holtz.eve.jpa.entity;
// Generated Aug 4, 2017 9:16:24 AM by Hibernate Tools 4.0.1.Final

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * TFafollowUpAction generated by hbm2java
 */
@Entity
@Table(name = "T_FAFollowUpAction", uniqueConstraints = @UniqueConstraint(columnNames = "FAFollowUpActionTx"))
public class TFafollowUpAction implements java.io.Serializable {

	private int fafollowUpActionId;
	private String fafollowUpActionTx;
	private Date facreationDate;
	private Date falastUpdatedDate;
	private boolean faunavailableBl;
	private boolean farequiredBl;
	private Set<TIfinterestFollowUp> TIfinterestFollowUps = new HashSet<TIfinterestFollowUp>(0);
	private Set<TCnContact> TCnContacts = new HashSet<TCnContact>(0);

	public TFafollowUpAction() {
	}

	public TFafollowUpAction(int fafollowUpActionId, String fafollowUpActionTx, Date facreationDate,
			Date falastUpdatedDate, boolean faunavailableBl, boolean farequiredBl) {
		this.fafollowUpActionId = fafollowUpActionId;
		this.fafollowUpActionTx = fafollowUpActionTx;
		this.facreationDate = facreationDate;
		this.falastUpdatedDate = falastUpdatedDate;
		this.faunavailableBl = faunavailableBl;
		this.farequiredBl = farequiredBl;
	}

	public TFafollowUpAction(int fafollowUpActionId, String fafollowUpActionTx, Date facreationDate,
			Date falastUpdatedDate, boolean faunavailableBl, boolean farequiredBl,
			Set<TIfinterestFollowUp> TIfinterestFollowUps, Set<TCnContact> TCnContacts) {
		this.fafollowUpActionId = fafollowUpActionId;
		this.fafollowUpActionTx = fafollowUpActionTx;
		this.facreationDate = facreationDate;
		this.falastUpdatedDate = falastUpdatedDate;
		this.faunavailableBl = faunavailableBl;
		this.farequiredBl = farequiredBl;
		this.TIfinterestFollowUps = TIfinterestFollowUps;
		this.TCnContacts = TCnContacts;
	}

	@Id

	@Column(name = "FAFollowUpActionID", unique = true, nullable = false)
	public int getFafollowUpActionId() {
		return this.fafollowUpActionId;
	}

	public void setFafollowUpActionId(int fafollowUpActionId) {
		this.fafollowUpActionId = fafollowUpActionId;
	}

	@Column(name = "FAFollowUpActionTx", unique = true, nullable = false)
	public String getFafollowUpActionTx() {
		return this.fafollowUpActionTx;
	}

	public void setFafollowUpActionTx(String fafollowUpActionTx) {
		this.fafollowUpActionTx = fafollowUpActionTx;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FACreationDate", nullable = false, length = 23)
	public Date getFacreationDate() {
		return this.facreationDate;
	}

	public void setFacreationDate(Date facreationDate) {
		this.facreationDate = facreationDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FALastUpdatedDate", nullable = false, length = 23)
	public Date getFalastUpdatedDate() {
		return this.falastUpdatedDate;
	}

	public void setFalastUpdatedDate(Date falastUpdatedDate) {
		this.falastUpdatedDate = falastUpdatedDate;
	}

	@Column(name = "FAUnavailableBl", nullable = false)
	public boolean isFaunavailableBl() {
		return this.faunavailableBl;
	}

	public void setFaunavailableBl(boolean faunavailableBl) {
		this.faunavailableBl = faunavailableBl;
	}

	@Column(name = "FARequiredBl", nullable = false)
	public boolean isFarequiredBl() {
		return this.farequiredBl;
	}

	public void setFarequiredBl(boolean farequiredBl) {
		this.farequiredBl = farequiredBl;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TFafollowUpAction")
	public Set<TIfinterestFollowUp> getTIfinterestFollowUps() {
		return this.TIfinterestFollowUps;
	}

	public void setTIfinterestFollowUps(Set<TIfinterestFollowUp> TIfinterestFollowUps) {
		this.TIfinterestFollowUps = TIfinterestFollowUps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TFafollowUpAction")
	public Set<TCnContact> getTCnContacts() {
		return this.TCnContacts;
	}

	public void setTCnContacts(Set<TCnContact> TCnContacts) {
		this.TCnContacts = TCnContacts;
	}

}
