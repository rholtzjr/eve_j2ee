package org.holtz.eve.jpa.entity;
// Generated Aug 4, 2017 9:16:24 AM by Hibernate Tools 4.0.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TMeMultiSale generated by hbm2java
 */
@Entity
@Table(name = "T_MeMultiSale")
public class TMeMultiSale implements java.io.Serializable {

	private int meMultiSaleId;
	private TCuCust TCuCustByMeOwnedById;
	private TCuCust TCuCustByMePurchasedById;
	private TInInvoice TInInvoice;
	private String meMultiSaleNameTx;
	private boolean meTripRelatedBl;
	private boolean meUnavailableBl;
	private Date meCreationDate;
	private Date meLastUpdatedDate;
	private Short meQtyIn;
	private Set<TVivoucherItem> TVivoucherItems = new HashSet<TVivoucherItem>(0);
	private Set<TIiinvoiceItem> TIiinvoiceItems = new HashSet<TIiinvoiceItem>(0);
	private Set<TMimultiSaleItem> TMimultiSaleItems = new HashSet<TMimultiSaleItem>(0);

	public TMeMultiSale() {
	}

	public TMeMultiSale(int meMultiSaleId, TCuCust TCuCustByMeOwnedById, String meMultiSaleNameTx,
			boolean meTripRelatedBl, boolean meUnavailableBl) {
		this.meMultiSaleId = meMultiSaleId;
		this.TCuCustByMeOwnedById = TCuCustByMeOwnedById;
		this.meMultiSaleNameTx = meMultiSaleNameTx;
		this.meTripRelatedBl = meTripRelatedBl;
		this.meUnavailableBl = meUnavailableBl;
	}

	public TMeMultiSale(int meMultiSaleId, TCuCust TCuCustByMeOwnedById, TCuCust TCuCustByMePurchasedById,
			TInInvoice TInInvoice, String meMultiSaleNameTx, boolean meTripRelatedBl, boolean meUnavailableBl,
			Date meCreationDate, Date meLastUpdatedDate, Short meQtyIn, Set<TVivoucherItem> TVivoucherItems,
			Set<TIiinvoiceItem> TIiinvoiceItems, Set<TMimultiSaleItem> TMimultiSaleItems) {
		this.meMultiSaleId = meMultiSaleId;
		this.TCuCustByMeOwnedById = TCuCustByMeOwnedById;
		this.TCuCustByMePurchasedById = TCuCustByMePurchasedById;
		this.TInInvoice = TInInvoice;
		this.meMultiSaleNameTx = meMultiSaleNameTx;
		this.meTripRelatedBl = meTripRelatedBl;
		this.meUnavailableBl = meUnavailableBl;
		this.meCreationDate = meCreationDate;
		this.meLastUpdatedDate = meLastUpdatedDate;
		this.meQtyIn = meQtyIn;
		this.TVivoucherItems = TVivoucherItems;
		this.TIiinvoiceItems = TIiinvoiceItems;
		this.TMimultiSaleItems = TMimultiSaleItems;
	}

	@Id

	@Column(name = "MeMultiSaleID", unique = true, nullable = false)
	public int getMeMultiSaleId() {
		return this.meMultiSaleId;
	}

	public void setMeMultiSaleId(int meMultiSaleId) {
		this.meMultiSaleId = meMultiSaleId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MeOwnedByID", nullable = false)
	public TCuCust getTCuCustByMeOwnedById() {
		return this.TCuCustByMeOwnedById;
	}

	public void setTCuCustByMeOwnedById(TCuCust TCuCustByMeOwnedById) {
		this.TCuCustByMeOwnedById = TCuCustByMeOwnedById;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MePurchasedByID")
	public TCuCust getTCuCustByMePurchasedById() {
		return this.TCuCustByMePurchasedById;
	}

	public void setTCuCustByMePurchasedById(TCuCust TCuCustByMePurchasedById) {
		this.TCuCustByMePurchasedById = TCuCustByMePurchasedById;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MePurchasedInvoiceID_N")
	public TInInvoice getTInInvoice() {
		return this.TInInvoice;
	}

	public void setTInInvoice(TInInvoice TInInvoice) {
		this.TInInvoice = TInInvoice;
	}

	@Column(name = "MeMultiSaleNameTx", nullable = false)
	public String getMeMultiSaleNameTx() {
		return this.meMultiSaleNameTx;
	}

	public void setMeMultiSaleNameTx(String meMultiSaleNameTx) {
		this.meMultiSaleNameTx = meMultiSaleNameTx;
	}

	@Column(name = "MeTripRelatedBl", nullable = false)
	public boolean isMeTripRelatedBl() {
		return this.meTripRelatedBl;
	}

	public void setMeTripRelatedBl(boolean meTripRelatedBl) {
		this.meTripRelatedBl = meTripRelatedBl;
	}

	@Column(name = "MeUnavailableBl", nullable = false)
	public boolean isMeUnavailableBl() {
		return this.meUnavailableBl;
	}

	public void setMeUnavailableBl(boolean meUnavailableBl) {
		this.meUnavailableBl = meUnavailableBl;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MeCreationDate", length = 23)
	public Date getMeCreationDate() {
		return this.meCreationDate;
	}

	public void setMeCreationDate(Date meCreationDate) {
		this.meCreationDate = meCreationDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "MeLastUpdatedDate", length = 23)
	public Date getMeLastUpdatedDate() {
		return this.meLastUpdatedDate;
	}

	public void setMeLastUpdatedDate(Date meLastUpdatedDate) {
		this.meLastUpdatedDate = meLastUpdatedDate;
	}

	@Column(name = "MeQtyIn")
	public Short getMeQtyIn() {
		return this.meQtyIn;
	}

	public void setMeQtyIn(Short meQtyIn) {
		this.meQtyIn = meQtyIn;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TMeMultiSale")
	public Set<TVivoucherItem> getTVivoucherItems() {
		return this.TVivoucherItems;
	}

	public void setTVivoucherItems(Set<TVivoucherItem> TVivoucherItems) {
		this.TVivoucherItems = TVivoucherItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TMeMultiSale")
	public Set<TIiinvoiceItem> getTIiinvoiceItems() {
		return this.TIiinvoiceItems;
	}

	public void setTIiinvoiceItems(Set<TIiinvoiceItem> TIiinvoiceItems) {
		this.TIiinvoiceItems = TIiinvoiceItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TMeMultiSale")
	public Set<TMimultiSaleItem> getTMimultiSaleItems() {
		return this.TMimultiSaleItems;
	}

	public void setTMimultiSaleItems(Set<TMimultiSaleItem> TMimultiSaleItems) {
		this.TMimultiSaleItems = TMimultiSaleItems;
	}

}
