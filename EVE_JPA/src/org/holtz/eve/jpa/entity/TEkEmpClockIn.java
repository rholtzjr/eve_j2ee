package org.holtz.eve.jpa.entity;
// Generated Aug 4, 2017 9:16:24 AM by Hibernate Tools 4.0.1.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TEkEmpClockIn generated by hbm2java
 */
@Entity
@Table(name = "T_EkEmpClockIn")
public class TEkEmpClockIn implements java.io.Serializable {

	private int ekEmpClockInId;
	private TEmEmp TEmEmp;
	private TTttaskType TTttaskType;
	private TPcpc TPcpc;
	private TSoStore TSoStore;
	private Date ekClockInDate;
	private Date ekClockOutDateN;
	private String ekCommentsTxN;

	public TEkEmpClockIn() {
	}

	public TEkEmpClockIn(int ekEmpClockInId, TEmEmp TEmEmp, TPcpc TPcpc, TSoStore TSoStore, Date ekClockInDate) {
		this.ekEmpClockInId = ekEmpClockInId;
		this.TEmEmp = TEmEmp;
		this.TPcpc = TPcpc;
		this.TSoStore = TSoStore;
		this.ekClockInDate = ekClockInDate;
	}

	public TEkEmpClockIn(int ekEmpClockInId, TEmEmp TEmEmp, TTttaskType TTttaskType, TPcpc TPcpc, TSoStore TSoStore,
			Date ekClockInDate, Date ekClockOutDateN, String ekCommentsTxN) {
		this.ekEmpClockInId = ekEmpClockInId;
		this.TEmEmp = TEmEmp;
		this.TTttaskType = TTttaskType;
		this.TPcpc = TPcpc;
		this.TSoStore = TSoStore;
		this.ekClockInDate = ekClockInDate;
		this.ekClockOutDateN = ekClockOutDateN;
		this.ekCommentsTxN = ekCommentsTxN;
	}

	@Id

	@Column(name = "EkEmpClockInID", unique = true, nullable = false)
	public int getEkEmpClockInId() {
		return this.ekEmpClockInId;
	}

	public void setEkEmpClockInId(int ekEmpClockInId) {
		this.ekEmpClockInId = ekEmpClockInId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EkEmpID", nullable = false)
	public TEmEmp getTEmEmp() {
		return this.TEmEmp;
	}

	public void setTEmEmp(TEmEmp TEmEmp) {
		this.TEmEmp = TEmEmp;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EkTaskTypeID_N")
	public TTttaskType getTTttaskType() {
		return this.TTttaskType;
	}

	public void setTTttaskType(TTttaskType TTttaskType) {
		this.TTttaskType = TTttaskType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EkPCID", nullable = false)
	public TPcpc getTPcpc() {
		return this.TPcpc;
	}

	public void setTPcpc(TPcpc TPcpc) {
		this.TPcpc = TPcpc;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EkStoreID", nullable = false)
	public TSoStore getTSoStore() {
		return this.TSoStore;
	}

	public void setTSoStore(TSoStore TSoStore) {
		this.TSoStore = TSoStore;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "EkClockInDate", nullable = false, length = 23)
	public Date getEkClockInDate() {
		return this.ekClockInDate;
	}

	public void setEkClockInDate(Date ekClockInDate) {
		this.ekClockInDate = ekClockInDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "EkClockOutDate_N", length = 23)
	public Date getEkClockOutDateN() {
		return this.ekClockOutDateN;
	}

	public void setEkClockOutDateN(Date ekClockOutDateN) {
		this.ekClockOutDateN = ekClockOutDateN;
	}

	@Column(name = "EkCommentsTx_N")
	public String getEkCommentsTxN() {
		return this.ekCommentsTxN;
	}

	public void setEkCommentsTxN(String ekCommentsTxN) {
		this.ekCommentsTxN = ekCommentsTxN;
	}

}
