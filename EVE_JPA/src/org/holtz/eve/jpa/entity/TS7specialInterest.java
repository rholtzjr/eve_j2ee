package org.holtz.eve.jpa.entity;
// Generated Aug 4, 2017 9:16:24 AM by Hibernate Tools 4.0.1.Final

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * TS7specialInterest generated by hbm2java
 */
@Entity
@Table(name = "T_S7SpecialInterest", uniqueConstraints = @UniqueConstraint(columnNames = "S7SpecialInterestTx"))
public class TS7specialInterest implements java.io.Serializable {

	private int s7specialInterestId;
	private String s7specialInterestTx;
	private boolean s7unavailableBl;
	private Date s7lastUpdatedDate;
	private boolean s7requiredBl;
	private Date s7creationDate;
	private Set<TSoStore> TSoStores = new HashSet<TSoStore>(0);
	private Set<TC8custInterest> TC8custInterests = new HashSet<TC8custInterest>(0);

	public TS7specialInterest() {
	}

	public TS7specialInterest(int s7specialInterestId, String s7specialInterestTx, boolean s7unavailableBl,
			Date s7lastUpdatedDate, boolean s7requiredBl, Date s7creationDate) {
		this.s7specialInterestId = s7specialInterestId;
		this.s7specialInterestTx = s7specialInterestTx;
		this.s7unavailableBl = s7unavailableBl;
		this.s7lastUpdatedDate = s7lastUpdatedDate;
		this.s7requiredBl = s7requiredBl;
		this.s7creationDate = s7creationDate;
	}

	public TS7specialInterest(int s7specialInterestId, String s7specialInterestTx, boolean s7unavailableBl,
			Date s7lastUpdatedDate, boolean s7requiredBl, Date s7creationDate, Set<TSoStore> TSoStores,
			Set<TC8custInterest> TC8custInterests) {
		this.s7specialInterestId = s7specialInterestId;
		this.s7specialInterestTx = s7specialInterestTx;
		this.s7unavailableBl = s7unavailableBl;
		this.s7lastUpdatedDate = s7lastUpdatedDate;
		this.s7requiredBl = s7requiredBl;
		this.s7creationDate = s7creationDate;
		this.TSoStores = TSoStores;
		this.TC8custInterests = TC8custInterests;
	}

	@Id

	@Column(name = "S7SpecialInterestID", unique = true, nullable = false)
	public int getS7specialInterestId() {
		return this.s7specialInterestId;
	}

	public void setS7specialInterestId(int s7specialInterestId) {
		this.s7specialInterestId = s7specialInterestId;
	}

	@Column(name = "S7SpecialInterestTx", unique = true, nullable = false)
	public String getS7specialInterestTx() {
		return this.s7specialInterestTx;
	}

	public void setS7specialInterestTx(String s7specialInterestTx) {
		this.s7specialInterestTx = s7specialInterestTx;
	}

	@Column(name = "S7UnavailableBl", nullable = false)
	public boolean isS7unavailableBl() {
		return this.s7unavailableBl;
	}

	public void setS7unavailableBl(boolean s7unavailableBl) {
		this.s7unavailableBl = s7unavailableBl;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "S7LastUpdatedDate", nullable = false, length = 23)
	public Date getS7lastUpdatedDate() {
		return this.s7lastUpdatedDate;
	}

	public void setS7lastUpdatedDate(Date s7lastUpdatedDate) {
		this.s7lastUpdatedDate = s7lastUpdatedDate;
	}

	@Column(name = "S7RequiredBl", nullable = false)
	public boolean isS7requiredBl() {
		return this.s7requiredBl;
	}

	public void setS7requiredBl(boolean s7requiredBl) {
		this.s7requiredBl = s7requiredBl;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "S7CreationDate", nullable = false, length = 23)
	public Date getS7creationDate() {
		return this.s7creationDate;
	}

	public void setS7creationDate(Date s7creationDate) {
		this.s7creationDate = s7creationDate;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "T_ZkStoreSpecialInterest", joinColumns = {
			@JoinColumn(name = "ZkSpecialInterestID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "ZkStoreID", nullable = false, updatable = false) })
	public Set<TSoStore> getTSoStores() {
		return this.TSoStores;
	}

	public void setTSoStores(Set<TSoStore> TSoStores) {
		this.TSoStores = TSoStores;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TS7specialInterest")
	public Set<TC8custInterest> getTC8custInterests() {
		return this.TC8custInterests;
	}

	public void setTC8custInterests(Set<TC8custInterest> TC8custInterests) {
		this.TC8custInterests = TC8custInterests;
	}

}
